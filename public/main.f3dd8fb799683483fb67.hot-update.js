/*! For license information please see main.f3dd8fb799683483fb67.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdategala_digdaya("main",{"./app/classes/Page.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>f});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/prefix/index.js"),a=s.n(n),o=s("./node_modules/lodash/each.js"),l=s.n(o),r=s("./node_modules/lodash/map.js"),h=s.n(r),m=s("./app/animations/Title.js"),c=s("./app/animations/Paragraph.js"),d=s("./app/animations/Label.js"),u=s("./app/animations/Highlight.js"),p=s("./app/animations/Buttons.js"),g=s("./app/classes/AsyncLoad.js"),w=s("./app/classes/Colors.js");Object(function(){var t=new Error("Cannot find module 'classes/Scroll'");throw t.code="MODULE_NOT_FOUND",t}());class f{constructor({element:t,elements:e,id:s}){this.selector=t,this.selectorChildren={preloaders:"[data-src]",animationsTitles:'[data-animation="title"]',aimationsHighlights:'[data-animation="highlight"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabels:'[data-animation="label"]',animationsButtons:'[data-animation="button"]',...e},this.id=s,this.transformPrefix=a()("transform")}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},this.x={start:0,distance:0,end:0},this.y={start:0,distance:0,end:0},l()(this.selectorChildren,((t,e)=>{t instanceof window.HTMLElement||t instanceof window.NodeList||Array.isArray(t)?this.elements[e]=t:(this.elements[e]=document.querySelectorAll(t),0===this.elements[e].length?this.elements[e]=null:1===this.elements[e].length&&(this.elements[e]=document.querySelector(t)))})),this.createAnimations(),this.createPreloader()}createPreloader(){this.preloaders=h()(this.elements.preloaders,(t=>new g.default({element:t})))}createAnimations(){this.animations=[],this.animationsButtons=h()(this.elements.animationsButtons,(t=>new p.default({element:t}))),this.animations.push(...this.animationsButtons),this.animationsTitles=h()(this.elements.animationsTitles,(t=>new m.default({element:t}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=h()(this.elements.animationsParagraphs,(t=>new c.default({element:t}))),this.animations.push(...this.animationsParagraphs),this.animationsLabels=h()(this.elements.animationsLabels,(t=>new d.default({element:t}))),this.animations.push(...this.animationsLabels),this.aimationsHighlights=h()(this.elements.aimationsHighlights,(t=>new u.default({element:t}))),this.animations.push(...this.aimationsHighlights)}createObserver(){this.observer=new window.ResizeObserver((t=>{for(const e of t)window.requestAnimationFrame((t=>{this.scroll.limit=h()(this.elements.wrapper).height-window.innerHeight}))})),this.observer.observe(this.elements.wrapper)}show(t){return new Promise((e=>{w.ColorsManager.change({backgroundColor:this.element.getAttribute("data-background"),color:this.element.getAttribute("data-color")}),t?this.animationIn=t:(this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1})),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((t=>{this.destroy(),this.animationIn=i.default.timeline(),this.animationIn.to(this.element,{autoAlpha:0,onComplete:t})}))}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),l()(this.animations,(t=>t.onResize()))}onWheel({pixelY:t}){this.scroll.target+=.5*t}onTouchDown(t){this.isDown=!0,this.y.start=t.touches?t.touches[0].clientY:t.clientY,this.scroll.start=this.scroll.current}onTouchUp(t){this.isDown=!1}onTouchMove(t){if(!this.isDown)return;this.y.end=t.touches?t.touches[0].clientY:t.clientY;const e=this.y.start-this.y.end;this.scroll.target=this.scroll.start+e}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translate3d(0px, -${this.scroll.current}px, 0px)`)}addEventListeners(){}removeEventListeners(){}destroy(){this.removeEventListeners()}}}},(function(t){t.h=()=>"cf72e7811049f241f822"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,